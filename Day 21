1----Tree: Height of a Binary Tree
'''
class Node:
      def __init__(self,info): 
          self.info = info  
          self.left = None  
          self.right = None 
           

       // this is a node of the tree , which contains info as data, left , right
'''
from collections import deque
def height(root):
    if root is None :
        return
    h=0 
    queue=deque()
    queue.append(root)
    while queue:
        size=len(queue)
        while size>0:
            f=queue.popleft()
            if f.left:
                queue.append(f.left)
            if f.right:
                queue.append(f.right)
            size-=1
        h+=1 
    return h-1    
 2----Tree: Level Order Traversal

def levelOrder(root):
  
    queue=deque()
    queue.append(root)
    while len(queue)>0:
        node=queue.popleft()
        print(node.info,end=' ')
        if node.left:
            queue.append(node.left)
        if node.right:
            queue.append(node.right)  
                                
